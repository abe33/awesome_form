:ruby
  AwesomeForm.theme = params[:theme] if params[:theme].present?

  m = User.new
  a = %w(text string number range range_float datetime boolean file select select_multiple check_boxes radios binary_radios)

  if params[:with_errors].present?
    a.each do |k|
      m.errors.add(k, 'this is the error message')
    end
  end

  default_input_html = {
    placeholder: 'placeholder',
  }
  hint =  params[:with_hints].present? ? 'This is a hint.' : nil

- content_for :styles do
  = stylesheet_link_tag AwesomeForm.theme, media: "all"

- content_for :scripts do
  = javascript_include_tag AwesomeForm.theme

= awesome_form_for m, url: '#', method: :get do |form|

  = form.inputs legend: 'Inputs', inputs_html: { class: 'red' } do
    = form.input :text, as: :text, required: params[:with_required], hint: hint, input_html: default_input_html
    = form.input :string, as: :string, required: params[:with_required], hint: hint, input_html: { value: 'bar' }.merge(default_input_html)
    = form.input :number, as: :number, required: params[:with_required], hint: hint, input_html: { min: 1, max: 10, step: 1, value: 5 }.merge(default_input_html)
    = form.input :range, as: :range, required: params[:with_required], hint: hint, input_html: { min: 1, max: 10, step: 1, value: 5}.merge(default_input_html)
    = form.input :range_float, as: :range, required: params[:with_required], hint: hint, input_html: { min: 1, max: 10, step: 0.1, value: 5}.merge(default_input_html)
    = form.input :datetime, as: :datetime, required: params[:with_required], hint: hint, input_html: { min: 1.day.ago, max: 1.day.from_now, value: Time.now }.merge(default_input_html)
    = form.input :file, as: :file, required: params[:with_required], hint: hint, input_html: default_input_html
    = form.input :select, as: :select, required: params[:with_required], hint: hint, collection: %w(a b c d e f g h i j k l)
    = form.input :select_multiple, as: :select, required: params[:with_required], hint: hint, collection: %w(a b c d e f g h i j k l), multiple: true
    = form.input :boolean, as: :boolean, required: params[:with_required], hint: hint, input_html: { value: 1 }
    = form.input :check_boxes, as: :check_boxes, required: params[:with_required], hint: hint, collection: %w(a b c d e f g h i j k l), columns: 3
    = form.input :radios, as: :radios, required: params[:with_required], hint: hint, collection: %w(a b c d e f g h i j k l), columns: 3
    = form.input :binary_radios, as: :radios, required: params[:with_required], hint: hint, collection: %w(a b), columns: 2, wrapper_html: { class: 'binary' }

  = form.actions :reset, :cancel, :submit

= link_to 'base', styles_path
= link_to 'with required', styles_path(with_required: 1)
= link_to 'with hints', styles_path(with_hints: 1)
= link_to 'with errors', styles_path(with_errors: 1)
= link_to 'with hints and errors', styles_path(with_hints: 1, with_errors: 1)
